---
import Section from "@/components/common/section.astro";
import SoftwareProjectPreview from "./software-project-preview.astro";
import type { ISoftwareProjectPreview } from "@/lib/types";
import { ArrowUpRight } from "lucide-astro";

const loadedSoftwareProjects = await Astro.glob(
  "/src/pages/software-projects/*.md",
);

const projects: ISoftwareProjectPreview[] = loadedSoftwareProjects
  .map(({ frontmatter, url }) => {
    return {
      title: frontmatter.title,
      languages: frontmatter.languages ? frontmatter.languages.split(", ") : [],
      date: new Date(Date.parse(frontmatter.date)),
      frameworks: !!frontmatter.frameworks
        ? frontmatter.frameworks.split(", ")
        : ([] as string[]),
      slug: url,
    } as ISoftwareProjectPreview;
  })
  .sort((a, b) => {
    if (!a.date || !b.date) return 0;

    if (a.date < b.date) return 1;
    return -1;
  })
  .slice(0, 5);
---

<Section
  title="Recent Software Projects"
  subsection
  sectionId="recent-software-projects-wrapper"
>
  <div class="whitespace-nowrap" id="recent-software-projects">
    {
      projects.map((project) => {
        return <SoftwareProjectPreview {...project} />;
      })
    }
  </div>
  <a
    href="/software-projects"
    class="button w-fit text-white bg-blue-600 px-4 hover:drop-shadow-2xl hover:bg-blue-600/70 my-4"
    ><ArrowUpRight class="mr-2 w-5 h-5" /> Check out all my software projects</a
  >
  <div class="mb-16"></div>
</Section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const preview = document.querySelector("#recent-software-projects");

  const singlePreview = document.querySelector("#recent-software-projects div");
  const singlePreviewMarginRight = parseInt(
    window
      .getComputedStyle(singlePreview!, null)
      .getPropertyValue("margin-right")
      .split("px")[0],
  );
  let previewWidth = parseInt(
    window
      .getComputedStyle(singlePreview!, null)
      .getPropertyValue("width")
      .split("px")[0],
  );

  const container = document.querySelector("main");
  const containerPaddingRight = parseInt(
    window
      .getComputedStyle(container!, null)
      .getPropertyValue("padding-right")
      .split("px")[0],
  );
  //@ts-ignore

  function getScrollAmount() {
    let amountToScroll =
      (previewWidth + singlePreviewMarginRight) * 5 -
      window.innerWidth +
      2 * containerPaddingRight;
    return -1 * amountToScroll;
  }

  const tween = gsap.to(preview, {
    x: getScrollAmount,
    duration: 1,
    ease: "none",
  });

  // const bgTween = gsap.to(document.querySelector("main"), {
  //   backgroundColor: "black",
  //   color: "white",
  //   duration: 1,
  // });
  //
  // const headerAnimation = gsap.to(document.querySelector("header"), {
  //   backgroundColor: "#e62756",
  //   color: "white",
  //   duration: 1,
  // });
  //
  // const hamburgerAnimation = gsap.to(
  //   document.querySelectorAll(".nav-hamburger span"),
  //   {
  //     backgroundColor: "white",
  //     duration: 1,
  //   },
  // );

  const combinedTimeline = gsap.timeline({ paused: true }); // Pause the timeline initially

  combinedTimeline.add([
    tween,
    // bgTween,
    // headerAnimation,
    // hamburgerAnimation
  ]);

  ScrollTrigger.create({
    trigger: "#projects",
    start: "top 20%",
    end: () => `+=${-1 * getScrollAmount()}`,
    pin: true,
    scrub: 1,
    animation: combinedTimeline,
    invalidateOnRefresh: true,
  });
</script>
