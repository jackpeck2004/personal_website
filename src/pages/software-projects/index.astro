---
import { Image } from "astro:assets";
import Scaffold from "@/layouts/scaffold.astro";
import type { ISoftwareProject } from "@/lib/types";
import { Github, Globe } from "lucide-astro";

const loadedSoftwareProjects = await Astro.glob(
  "/src/pages/software-projects/*.md",
);

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/public/software-projects/*.{jpeg,jpg,png,gif,svg,webp}",
);

const projects: ISoftwareProject[] = loadedSoftwareProjects
  .map(({ frontmatter, url }) => {
    return {
      title: frontmatter.title,
      languages: frontmatter.languages ? frontmatter.languages.split(", ") : [],
      date: new Date(Date.parse(frontmatter.date)),
      frameworks: !!frontmatter.frameworks
        ? frontmatter.frameworks.split(", ")
        : ([] as string[]),
      description: frontmatter.description,
      slug: url,
      github: frontmatter.github,
      live: frontmatter.live,
      previewImage: frontmatter["preview-image"],
    } as ISoftwareProject;
  })
  .sort((a, b) => {
    if (!a.date || !b.date) return 0;

    if (a.date < b.date) return 1;
    return -1;
  });
---

<Scaffold>
  <main class="bg-black min-w-screen text-white py-32 2xl:px-32">
    <!-- <pre>{JSON.stringify(projects, null, 2)}</pre> -->
    <h1 class="text-5xl font-bold my-6">Software Projects</h1>
    <div class="grid grid-cols-4 gap-4">
      {
        projects.map(
          ({
            title,
            languages,
            date,
            frameworks,
            slug,
            github,
            live,
            previewImage,
            description,
          }) => {
            console.log(title + " " + previewImage);
            const name = "/public/software-projects/" + previewImage;
            const i = images[name];
            console.log(i);
            return (
              <div class="bg-white w-full min-h-[400px] rounded-xl px-4 py-4 border-2 border-white text-black flex flex-col justify-center items-between">
                <Image
                  src={i()}
                  height="150"
                  decoding="async"
                  loading="lazy"
                  alt={`${title} - {description}`}
                  class="mx-auto"
                />
                <h2 class="text-xl font-bold my-4">{title}</h2>
                <div class="mt-auto flex">
                  {!!github ? (
                    <a
                      href={github}
                      class="button border-gray-200 xl:mr-2 w-48 justify-center my-4 flex border-2 border-gray-200 transition hover:border-black px-4 py-4 rounded-full"
                    >
                      <Github class="mr-2" />
                      GitHub
                    </a>
                  ) : null}
                  {!!live ? (
                    <a
                      href={live}
                      class="button xl:mr-2 w-48 justify-center my-4 flex border-2 border-gray-200 transition hover:border-black px-4 py-4 rounded-full"
                    >
                      <Globe class="mr-2" />
                      Live
                    </a>
                  ) : null}
                </div>
              </div>
            );
          },
        )
      }
    </div>
  </main>
</Scaffold>

<style>
  main {
    min-height: 100vh;
    background: linear-gradient(-45deg, #000, #16161d, #0e2761);
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
</style>
